{"version":3,"sources":["App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","img/covid.png","../node_modules/moment/src/lib/locale sync","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js"],"names":["module","exports","webpackEmptyContext","req","e","Error","code","keys","resolve","id","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","value","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","total","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","infected","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","InputLabel","Select","labelId","defaultValue","onChange","target","MenuItem","i","key","App","state","setState","this","image","src","covid","alt","href","border","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.84d6c2ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2-YFM\",\"image\":\"App_image__zVI1E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__294S_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1JDNB\"};","module.exports = __webpack_public_path__ + \"static/media/covid.d7265326.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 270;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2iFwr\",\"card\":\"Cards_card__3Iq4I\",\"total\":\"Cards_total__1dDDf\",\"infected\":\"Cards_infected__Zunh2\",\"recovered\":\"Cards_recovered__3Hj3J\",\"deaths\":\"Cards_deaths__2j3p0\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  if (!confirmed) {\r\n    return \"Loading...\";\r\n  }\r\n  console.log(confirmed.value, recovered.value, deaths.value);\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.total)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Total Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value}\r\n                duration={1.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">Total cases of COVID 19</Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Active\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={confirmed.value - recovered.value - deaths.value}\r\n                duration={1.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={recovered.value}\r\n                duration={1.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={2}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp\r\n                start={0}\r\n                end={deaths.value}\r\n                duration={1.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textSecondary\">\r\n              {new Date(lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of deaths caused by COVID 19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async (country) => {\r\n  let changableUrl = url;\r\n\r\n  if (country) {\r\n    changableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(changableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n\r\n    return modifiedData;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Total\", \"Active\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(255, 217, 0, 0.5)\",\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [\r\n              confirmed.value,\r\n              confirmed.value - recovered.value - deaths.value,\r\n              recovered.value,\r\n              deaths.value,\r\n            ],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? barChart : lineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  NativeSelect,\r\n  FormControl,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n} from \"@material-ui/core\";\r\n\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport cx from \"classnames\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={cx(styles.formControl)}>\r\n      <InputLabel id=\"label\">Country</InputLabel>\r\n      <Select\r\n        labelId=\"label\"\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <MenuItem value=\"\">Global</MenuItem>\r\n        {fetchedCountries.map((country, i) => (\r\n          <MenuItem key={i} value={country}>\r\n            {country}\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { fetchData } from \"./api\";\r\nimport covid from \"./img/covid.png\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: \"\",\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  };\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={covid} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n        <div className=\"counter\">\r\n          <a href=\"https://www.hitwebcounter.com\" target=\"_blank\">\r\n            <img\r\n              src=\"https://hitwebcounter.com/counter/counter.php?page=7286824&style=0007&nbdigits=5&type=page&initCount=8\"\r\n              alt=\"PHP Hits Count\"\r\n              border=\"0\"\r\n              title=\"User Stats\"\r\n            />\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./App.js\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}